[
  {
    "id": "c76d256cbf3f5b36",
    "type": "tab",
    "label": "AmbientTemperatureRegulation",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "91d3e3e2f3d403b2",
    "type": "tab",
    "label": "Swimming Pools",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "1f6f1fdfddc5dc11",
    "type": "tab",
    "label": "WaterBnB",
    "disabled": false,
    "info": "",
    "env": []
  },
  {
    "id": "e5e1b9d89036fe8f",
    "type": "group",
    "z": "1f6f1fdfddc5dc11",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": ["8ccfce35838d8c63", "27dcf29ab60e4b40", "420af8e04016e992"],
    "x": 94,
    "y": 399,
    "w": 772,
    "h": 142
  },
  {
    "id": "8790d48f6e3c0f47",
    "type": "group",
    "z": "1f6f1fdfddc5dc11",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": ["f8d0aec8cc27050c", "b5bf64b41ee9ea69"],
    "x": 94,
    "y": 299,
    "w": 412,
    "h": 82
  },
  {
    "id": "54e3ebcd22faf107",
    "type": "group",
    "z": "1f6f1fdfddc5dc11",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "5585f1c36b11838f",
      "696ea75c31f93bd5",
      "eb2979143969bbd6",
      "529bc0c3a4faab33",
      "bb1ba11f7609f69f"
    ],
    "x": 94,
    "y": 559,
    "w": 792,
    "h": 142
  },
  {
    "id": "09f609abe92eadcf",
    "type": "group",
    "z": "1f6f1fdfddc5dc11",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": ["79af489d737caf34", "a9c6d8aaa69be1b2", "dae54a501e30d888"],
    "x": 94,
    "y": 919,
    "w": 532,
    "h": 162
  },
  {
    "id": "ab2f79661cd63707",
    "type": "group",
    "z": "1f6f1fdfddc5dc11",
    "style": {
      "stroke": "#999999",
      "stroke-opacity": "1",
      "fill": "none",
      "fill-opacity": "1",
      "label": true,
      "label-position": "nw",
      "color": "#a4a4a4"
    },
    "nodes": [
      "14868c269e8990cc",
      "bc2b14cd49ca6fc5",
      "83bd0e73e2940c63",
      "5ade3da8a24690b2"
    ],
    "x": 94,
    "y": 739,
    "w": 812,
    "h": 142
  },
  {
    "id": "ea51a0c4faef9ea4",
    "type": "serial-port",
    "name": "",
    "serialport": "/dev/ttyUSB0",
    "serialbaud": "9600",
    "databits": "8",
    "parity": "none",
    "stopbits": "1",
    "waitfor": "",
    "dtr": "none",
    "rts": "none",
    "cts": "none",
    "dsr": "none",
    "newline": "\\n",
    "bin": "false",
    "out": "char",
    "addchar": "",
    "responsetimeout": "10000"
  },
  {
    "id": "7585f39cdd77b7bf",
    "type": "serial-port",
    "name": "COM3",
    "serialport": "COM3",
    "serialbaud": "9600",
    "databits": "8",
    "parity": "none",
    "stopbits": "1",
    "waitfor": "",
    "dtr": "none",
    "rts": "none",
    "cts": "none",
    "dsr": "none",
    "newline": "\\n",
    "bin": "false",
    "out": "char",
    "addchar": "",
    "responsetimeout": "10000"
  },
  {
    "id": "432d9c90e9ab22f4",
    "type": "ui_tab",
    "name": "TabDemo",
    "icon": "dashboard",
    "order": 2,
    "disabled": false,
    "hidden": false
  },
  {
    "id": "2d3345a660c1a764",
    "type": "ui_base",
    "theme": {
      "name": "theme-light",
      "lightTheme": {
        "default": "#0094CE",
        "baseColor": "#0094CE",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "edited": true,
        "reset": false
      },
      "darkTheme": {
        "default": "#097479",
        "baseColor": "#097479",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
        "edited": false
      },
      "customTheme": {
        "name": "Untitled Theme 1",
        "default": "#4B7930",
        "baseColor": "#4B7930",
        "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
      },
      "themeState": {
        "base-color": {
          "default": "#0094CE",
          "value": "#0094CE",
          "edited": false
        },
        "page-titlebar-backgroundColor": {
          "value": "#0094CE",
          "edited": false
        },
        "page-backgroundColor": {
          "value": "#fafafa",
          "edited": false
        },
        "page-sidebar-backgroundColor": {
          "value": "#ffffff",
          "edited": false
        },
        "group-textColor": {
          "value": "#1bbfff",
          "edited": false
        },
        "group-borderColor": {
          "value": "#ffffff",
          "edited": false
        },
        "group-backgroundColor": {
          "value": "#ffffff",
          "edited": false
        },
        "widget-textColor": {
          "value": "#111111",
          "edited": false
        },
        "widget-backgroundColor": {
          "value": "#0094ce",
          "edited": false
        },
        "widget-borderColor": {
          "value": "#ffffff",
          "edited": false
        },
        "base-font": {
          "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
        }
      },
      "angularTheme": {
        "primary": "indigo",
        "accents": "blue",
        "warn": "red",
        "background": "grey",
        "palette": "light"
      }
    },
    "site": {
      "name": "Node-RED Dashboard",
      "hideToolbar": "false",
      "allowSwipe": "false",
      "lockMenu": "false",
      "allowTempTheme": "true",
      "dateFormat": "DD/MM/YYYY",
      "sizes": {
        "sx": 48,
        "sy": 48,
        "gx": 6,
        "gy": 6,
        "cx": 6,
        "cy": 6,
        "px": 0,
        "py": 0
      }
    }
  },
  {
    "id": "ffe3a04d976d4b3e",
    "type": "ui_group",
    "name": "GroupDemo",
    "tab": "432d9c90e9ab22f4",
    "order": 1,
    "disp": true,
    "width": "6",
    "collapse": false,
    "className": ""
  },
  {
    "id": "294124a62d241622",
    "type": "ui_tab",
    "name": "AmbientTemperatureRegulation",
    "icon": "dashboard",
    "order": 1,
    "disabled": false,
    "hidden": false
  },
  {
    "id": "b895049551d7ef00",
    "type": "ui_group",
    "name": "Light",
    "tab": "294124a62d241622",
    "order": 1,
    "disp": true,
    "width": "6",
    "collapse": false,
    "className": ""
  },
  {
    "id": "8134028b5b28b599",
    "type": "ui_group",
    "name": "Temperature",
    "tab": "294124a62d241622",
    "order": 2,
    "disp": true,
    "width": "6",
    "collapse": false,
    "className": ""
  },
  {
    "id": "c381d97f0297a045",
    "type": "ui_group",
    "z": "91d3e3e2f3d403b2",
    "name": "SP",
    "tab": "580b23053f774d4a",
    "order": 1,
    "disp": true,
    "width": "25",
    "collapse": false,
    "className": ""
  },
  {
    "id": "2440edb5d689cbd1",
    "type": "mqtt-broker",
    "name": "Mosquitto broker",
    "broker": "test.mosquitto.org",
    "port": "1883",
    "tls": "",
    "clientid": "GMM",
    "autoConnect": true,
    "usetls": false,
    "protocolVersion": "4",
    "keepalive": "60",
    "cleansession": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthPayload": "",
    "birthMsg": {},
    "closeTopic": "",
    "closeQos": "0",
    "closePayload": "",
    "closeMsg": {},
    "willTopic": "",
    "willQos": "0",
    "willPayload": "",
    "willMsg": {},
    "userProps": "",
    "sessionExpiry": ""
  },
  {
    "id": "8cac27d44580223b",
    "type": "ui_group",
    "name": "Pour mettre votre dashboard de l'ESP/piscine",
    "tab": "5f184e1fabd409d3",
    "order": 1,
    "disp": true,
    "width": "6",
    "collapse": false,
    "className": ""
  },
  {
    "id": "580b23053f774d4a",
    "type": "ui_tab",
    "z": "91d3e3e2f3d403b2",
    "name": "Tab of  Swimming Pools",
    "icon": "dashboard",
    "disabled": false,
    "hidden": false
  },
  {
    "id": "5f184e1fabd409d3",
    "type": "ui_tab",
    "name": "Dash de l'ESP",
    "icon": "dashboard",
    "order": 3,
    "disabled": false,
    "hidden": false
  },
  {
    "id": "98d215d2512f5617",
    "type": "mqtt-broker",
    "name": "",
    "broker": "test.mosquitto.org",
    "port": "1883",
    "clientid": "",
    "autoConnect": true,
    "usetls": false,
    "protocolVersion": "4",
    "keepalive": "60",
    "cleansession": true,
    "autoUnsubscribe": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthRetain": "false",
    "birthPayload": "",
    "birthMsg": {},
    "closeTopic": "",
    "closeQos": "0",
    "closeRetain": "false",
    "closePayload": "",
    "closeMsg": {},
    "willTopic": "",
    "willQos": "0",
    "willRetain": "false",
    "willPayload": "",
    "willMsg": {},
    "userProps": "",
    "sessionExpiry": ""
  },
  {
    "id": "7eb488fc4545d3f6",
    "type": "ui_group",
    "z": "1f6f1fdfddc5dc11",
    "name": "Service WaterBnB :",
    "tab": "81a922066a2f9aa3",
    "order": 1,
    "disp": true,
    "width": "20",
    "collapse": false,
    "className": ""
  },
  {
    "id": "f10dc6c57fe42592",
    "type": "mqtt-broker",
    "name": "",
    "broker": "mqtt.eclipseprojects.io",
    "port": "1883",
    "clientid": "",
    "autoConnect": true,
    "usetls": false,
    "protocolVersion": "4",
    "keepalive": "15",
    "cleansession": true,
    "birthTopic": "",
    "birthQos": "0",
    "birthPayload": "",
    "birthMsg": {},
    "closeTopic": "",
    "closePayload": "",
    "closeMsg": {},
    "willTopic": "",
    "willQos": "0",
    "willPayload": "",
    "willMsg": {},
    "userProps": "",
    "sessionExpiry": ""
  },
  {
    "id": "81a922066a2f9aa3",
    "type": "ui_tab",
    "z": "1f6f1fdfddc5dc11",
    "name": "WaterBnB",
    "icon": "dashboard",
    "disabled": false,
    "hidden": false
  },
  {
    "id": "1f4ac3df40d00f49",
    "type": "json",
    "z": "c76d256cbf3f5b36",
    "name": "",
    "property": "payload",
    "action": "obj",
    "pretty": false,
    "x": 190,
    "y": 160,
    "wires": [
      [
        "99253867528c4326",
        "ace363ab810726ae",
        "7a05036c61e47a44",
        "08543df9beae651a",
        "a35de9983ec29cff",
        "71b09aade8525e71",
        "341c533c48232f06",
        "7c1cd217a0674c95",
        "3947aa2fcaaeb161"
      ]
    ]
  },
  {
    "id": "99253867528c4326",
    "type": "function",
    "z": "c76d256cbf3f5b36",
    "name": "Formatting for csv",
    "func": "\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 410,
    "y": 100,
    "wires": [["89ef99d0d792bcee"]]
  },
  {
    "id": "ace363ab810726ae",
    "type": "function",
    "z": "c76d256cbf3f5b36",
    "name": "extract_temprature()",
    "func": "msg.topic=\"temperature\";\nmsg.payload=msg.payload.status.temperature;\n\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 420,
    "y": 160,
    "wires": [["58b0ea2b315367e8"]]
  },
  {
    "id": "7a05036c61e47a44",
    "type": "function",
    "z": "c76d256cbf3f5b36",
    "name": "extract_light",
    "func": "msg.topic=\"light\";\nmsg.payload=msg.payload.status.light;\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 390,
    "y": 220,
    "wires": [["27e7ce4dbc6a6a17"]]
  },
  {
    "id": "89ef99d0d792bcee",
    "type": "file",
    "z": "c76d256cbf3f5b36",
    "name": "",
    "filename": "C:\\Users\\dheer\\OneDrive - Higher Education Commission\\M1 Computer Science\\IOT\\Assignment\\regul\\sensors.csv",
    "filenameType": "str",
    "appendNewline": true,
    "createDir": false,
    "overwriteFile": "false",
    "encoding": "none",
    "x": 970,
    "y": 100,
    "wires": [[]]
  },
  {
    "id": "3947aa2fcaaeb161",
    "type": "debug",
    "z": "c76d256cbf3f5b36",
    "name": "msg.payload",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 290,
    "y": 480,
    "wires": []
  },
  {
    "id": "58b0ea2b315367e8",
    "type": "ui_gauge",
    "z": "c76d256cbf3f5b36",
    "name": "",
    "group": "8134028b5b28b599",
    "order": 3,
    "width": 0,
    "height": 0,
    "gtype": "gage",
    "title": "Temprature",
    "label": "units",
    "format": "{{value}}",
    "min": 0,
    "max": "60",
    "colors": ["#ff0000", "#00ff00", "#0000ff"],
    "seg1": "29",
    "seg2": "31",
    "diff": false,
    "className": "",
    "x": 690,
    "y": 160,
    "wires": []
  },
  {
    "id": "27e7ce4dbc6a6a17",
    "type": "ui_gauge",
    "z": "c76d256cbf3f5b36",
    "name": "",
    "group": "b895049551d7ef00",
    "order": 1,
    "width": 0,
    "height": 0,
    "gtype": "gage",
    "title": "Light illumination",
    "label": "units",
    "format": "{{value}}",
    "min": 0,
    "max": "3000",
    "colors": ["#00b500", "#ff0000", "#ff0000"],
    "seg1": "1500",
    "seg2": "2000",
    "diff": false,
    "className": "",
    "x": 710,
    "y": 220,
    "wires": []
  },
  {
    "id": "01c86a06761e2692",
    "type": "ui_led",
    "z": "c76d256cbf3f5b36",
    "order": 1,
    "group": "b895049551d7ef00",
    "width": 0,
    "height": 0,
    "label": "Fire Detection",
    "labelPlacement": "left",
    "labelAlignment": "left",
    "colorForValue": [
      {
        "color": "#ff0000",
        "value": "true",
        "valueType": "bool"
      }
    ],
    "allowColorForValueInMessage": false,
    "shape": "circle",
    "showGlow": true,
    "name": "",
    "x": 670,
    "y": 260,
    "wires": []
  },
  {
    "id": "08543df9beae651a",
    "type": "function",
    "z": "c76d256cbf3f5b36",
    "name": "extract_fire",
    "func": "msg.topic = \"fire\";\nmsg.payload = msg.payload.status.fire;\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 390,
    "y": 260,
    "wires": [["01c86a06761e2692"]]
  },
  {
    "id": "c20bf2b1b9be3cf1",
    "type": "ui_led",
    "z": "c76d256cbf3f5b36",
    "order": 4,
    "group": "8134028b5b28b599",
    "width": 0,
    "height": 0,
    "label": "Heating the System",
    "labelPlacement": "left",
    "labelAlignment": "left",
    "colorForValue": [
      {
        "color": "#ff0000",
        "value": "true",
        "valueType": "bool"
      }
    ],
    "allowColorForValueInMessage": false,
    "shape": "circle",
    "showGlow": true,
    "name": "",
    "x": 670,
    "y": 300,
    "wires": []
  },
  {
    "id": "a35de9983ec29cff",
    "type": "function",
    "z": "c76d256cbf3f5b36",
    "name": "extract_heat",
    "func": "msg.topic=\"heat\";\nmsg.payload= (msg.payload.status.heat == \"ON\");\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 390,
    "y": 300,
    "wires": [["c20bf2b1b9be3cf1"]]
  },
  {
    "id": "71b09aade8525e71",
    "type": "function",
    "z": "c76d256cbf3f5b36",
    "name": "extract_cold",
    "func": "msg.topic=\"cold\";\nmsg.payload= (msg.payload.status.cold == \"ON\");\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 390,
    "y": 340,
    "wires": [["2bf20d8c7e990e96"]]
  },
  {
    "id": "2bf20d8c7e990e96",
    "type": "ui_led",
    "z": "c76d256cbf3f5b36",
    "order": 5,
    "group": "8134028b5b28b599",
    "width": 0,
    "height": 0,
    "label": "Cooling the System",
    "labelPlacement": "left",
    "labelAlignment": "left",
    "colorForValue": [
      {
        "color": "#00ff00",
        "value": "true",
        "valueType": "bool"
      }
    ],
    "allowColorForValueInMessage": false,
    "shape": "circle",
    "showGlow": true,
    "name": "",
    "x": 670,
    "y": 340,
    "wires": []
  },
  {
    "id": "341c533c48232f06",
    "type": "function",
    "z": "c76d256cbf3f5b36",
    "name": "extract_lt",
    "func": "msg.topic=\"lt\";\nmsg.payload= msg.payload.regul.lt;\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 380,
    "y": 380,
    "wires": [["d25eb9977264f6e8"]]
  },
  {
    "id": "7c1cd217a0674c95",
    "type": "function",
    "z": "c76d256cbf3f5b36",
    "name": "extract_ht",
    "func": "msg.topic = \"ht\";\nmsg.payload = msg.payload.regul.ht;\nreturn msg;",
    "outputs": 1,
    "timeout": 0,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 380,
    "y": 420,
    "wires": [["85ac810c3c54b59f"]]
  },
  {
    "id": "d25eb9977264f6e8",
    "type": "ui_text",
    "z": "c76d256cbf3f5b36",
    "group": "8134028b5b28b599",
    "order": 1,
    "width": 0,
    "height": 0,
    "name": "",
    "label": "Lower Threshold",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "className": "",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#000000",
    "x": 710,
    "y": 380,
    "wires": []
  },
  {
    "id": "85ac810c3c54b59f",
    "type": "ui_text",
    "z": "c76d256cbf3f5b36",
    "group": "8134028b5b28b599",
    "order": 2,
    "width": 0,
    "height": 0,
    "name": "",
    "label": "Higher Threshold",
    "format": "{{msg.payload}}",
    "layout": "row-spread",
    "className": "",
    "style": false,
    "font": "",
    "fontSize": 16,
    "color": "#000000",
    "x": 710,
    "y": 420,
    "wires": []
  },
  {
    "id": "b2a480adef5be019",
    "type": "http in",
    "z": "c76d256cbf3f5b36",
    "name": "",
    "url": "/esp",
    "method": "post",
    "upload": false,
    "swaggerDoc": "",
    "x": 80,
    "y": 280,
    "wires": [["1f4ac3df40d00f49"]]
  },
  {
    "id": "e8451161fd518278",
    "type": "inject",
    "z": "91d3e3e2f3d403b2",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "str",
    "x": 190,
    "y": 220,
    "wires": [["00cfe8bb3c2ae70c"]]
  },
  {
    "id": "00cfe8bb3c2ae70c",
    "type": "function",
    "z": "91d3e3e2f3d403b2",
    "name": "Téléportation",
    "func": "// create random position\nvar lat = 43.61999752 + Math.random() * 0.1;\nvar lon = 7.0499998 + Math.random() * 0.1;\nmsg.payload={\n    lat:lat, \n    lon:lon, \n    name:\"Gilles\", \n    description: \"Temperature in my swimming pool\",\n    value: 20.5,\n    unit: \"°C\",\n    icon:\"male\", \n    color:\"#000\"};\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 380,
    "y": 280,
    "wires": [["4fbe6756507df24d", "42b8ea3596ba0a99", "26974a09caba3580"]]
  },
  {
    "id": "6b986ec77b36c4d7",
    "type": "ui_button",
    "z": "91d3e3e2f3d403b2",
    "name": "",
    "group": "c381d97f0297a045",
    "order": 0,
    "width": 0,
    "height": 0,
    "passthru": false,
    "label": "Move Gilles",
    "tooltip": "",
    "color": "",
    "bgcolor": "",
    "className": "",
    "icon": "fa-male",
    "payload": "",
    "payloadType": "str",
    "topic": "",
    "topicType": "str",
    "x": 190,
    "y": 280,
    "wires": [["00cfe8bb3c2ae70c"]]
  },
  {
    "id": "925f3b7965da3271",
    "type": "mqtt in",
    "z": "91d3e3e2f3d403b2",
    "name": "",
    "topic": "uca/iot/piscine",
    "qos": "0",
    "datatype": "utf8",
    "broker": "98d215d2512f5617",
    "nl": false,
    "rap": true,
    "rh": 0,
    "inputs": 0,
    "x": 170,
    "y": 460,
    "wires": [["c9af18af38a83c29"]]
  },
  {
    "id": "26974a09caba3580",
    "type": "debug",
    "z": "91d3e3e2f3d403b2",
    "name": "debug 1",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 860,
    "y": 360,
    "wires": []
  },
  {
    "id": "c9af18af38a83c29",
    "type": "json",
    "z": "91d3e3e2f3d403b2",
    "name": "",
    "property": "payload",
    "action": "obj",
    "pretty": false,
    "x": 372,
    "y": 419,
    "wires": [["d4e00a19d43a8be2"]]
  },
  {
    "id": "26dc85a71fbf815e",
    "type": "ui_button",
    "z": "91d3e3e2f3d403b2",
    "name": "",
    "group": "c381d97f0297a045",
    "order": 2,
    "width": 0,
    "height": 0,
    "passthru": false,
    "label": "Reset",
    "tooltip": "",
    "color": "",
    "bgcolor": "",
    "className": "",
    "icon": "",
    "payload": "",
    "payloadType": "str",
    "topic": "",
    "topicType": "str",
    "x": 181.5,
    "y": 376,
    "wires": [["d22925aa4c16abf6"]]
  },
  {
    "id": "d22925aa4c16abf6",
    "type": "function",
    "z": "91d3e3e2f3d403b2",
    "name": "Reset Layer",
    "func": "// clear the \"by default\" layer \nmsg.payload = {\"command\": { \"clear\": \"unknown\" } };\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 384.5,
    "y": 349,
    "wires": [["42b8ea3596ba0a99"]]
  },
  {
    "id": "d4e00a19d43a8be2",
    "type": "function",
    "z": "91d3e3e2f3d403b2",
    "name": "json adapt",
    "func": "/* \n* Ce node permet d'adapter le format json produit \n* par l'ESP à celui attendu par la map \n*/\n\n//http://stevesnoderedguide.com/node-red-functions\nvar nmsg = { // on cree un nouveau message nodered\n    topic: msg.topic  // on garde le vieux topic\n    };\n\n// Gestion de l'occupation\nvar busy;\n\nif (msg.payload.piscine.occuped === false)\n  busy = \"battery-empty\";\nelse\n  busy = \"battery-full\";\n  \n// busy = \"battery-full\";\n\nvar hsc;\nif (msg.payload.piscine.hotspot === false)\n  hsc = \"Blue\";\nelse\n  hsc = \"Red\";\n\nnmsg.payload = { // on modifie/adapte la payload\n    layer : \"swimming pools\",\n    name : msg.payload.info.ident,\n    description: msg.payload.info.user,\n    unit:\"C\",\n    color: \"#000\",\n    value: msg.payload.status.temperature,\n    lat: msg.payload.location.gps.lat,\n    lon: msg.payload.location.gps.lon,\n    iconColor : hsc,\n    //icon: \"male\",\n    icon: busy    \n}\n\nreturn nmsg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 610.5,
    "y": 379,
    "wires": [["42b8ea3596ba0a99", "26974a09caba3580"]]
  },
  {
    "id": "68db9c99cb7efd02",
    "type": "comment",
    "z": "91d3e3e2f3d403b2",
    "name": "Fichier mapflow.json  : How to embed Map in Dashboard and connect it via MQTT.",
    "info": "This example shows how to embed the Worldmap \nwithin the `node-red-dashboard`\n\nThe  flow creates a dashboard button that \ngenerates a randon position, with the required \nicon, and passes that to the worldmap. The\nmap is configured to automatically pan to the\nposition of any point that arrives.\n",
    "x": 380,
    "y": 120,
    "wires": []
  },
  {
    "id": "01b369780431a3cf",
    "type": "ui_led",
    "z": "91d3e3e2f3d403b2",
    "order": 0,
    "group": "8cac27d44580223b",
    "width": 0,
    "height": 0,
    "label": "another tab sp",
    "labelPlacement": "left",
    "labelAlignment": "left",
    "colorForValue": [
      {
        "color": "#ff0000",
        "value": "false",
        "valueType": "bool"
      },
      {
        "color": "#008000",
        "value": "true",
        "valueType": "bool"
      }
    ],
    "allowColorForValueInMessage": false,
    "shape": "circle",
    "showGlow": true,
    "name": "",
    "x": 170,
    "y": 660,
    "wires": []
  },
  {
    "id": "4fbe6756507df24d",
    "type": "worldmap-tracks",
    "z": "91d3e3e2f3d403b2",
    "name": "",
    "depth": "6",
    "layer": "combined",
    "smooth": false,
    "x": 593,
    "y": 232,
    "wires": [["42b8ea3596ba0a99"]]
  },
  {
    "id": "42b8ea3596ba0a99",
    "type": "ui_worldmap",
    "z": "91d3e3e2f3d403b2",
    "group": "c381d97f0297a045",
    "order": 4,
    "width": "0",
    "height": "0",
    "name": "",
    "lat": "43.61999752",
    "lon": "7.0499998",
    "zoom": "11",
    "layer": "OSMC",
    "cluster": "",
    "maxage": "",
    "usermenu": "show",
    "layers": "show",
    "panit": "true",
    "panlock": "false",
    "zoomlock": "false",
    "hiderightclick": "true",
    "coords": "deg",
    "showgrid": "true",
    "allowFileDrop": "false",
    "path": "/worldmap",
    "overlist": "DR,CO,RA,DN,TL,HM",
    "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop",
    "mapname": "",
    "mapurl": "",
    "mapopt": "",
    "mapwms": false,
    "x": 860,
    "y": 280,
    "wires": []
  },
  {
    "id": "20cd6bdf550085e3",
    "type": "inject",
    "z": "1f6f1fdfddc5dc11",
    "name": "",
    "props": [
      {
        "p": "payload"
      },
      {
        "p": "topic",
        "vt": "str"
      }
    ],
    "repeat": "",
    "crontab": "",
    "once": false,
    "onceDelay": "",
    "topic": "",
    "payload": "",
    "payloadType": "str",
    "x": 190,
    "y": 200,
    "wires": [["b8f2d41af7bf6818"]]
  },
  {
    "id": "b8f2d41af7bf6818",
    "type": "function",
    "z": "1f6f1fdfddc5dc11",
    "name": "Téléportation",
    "func": "// create random position\nvar lat = 43.61999752 + Math.random() * 0.1;\nvar lon = 7.0499998 + Math.random() * 0.1;\nmsg.payload={\n    layer:\"swimming pools\",\n    lat:lat, \n    lon:lon, \n    name:global.get(\"clientid\"), \n    description: \"Temperature in my swimming pool\",\n    value: 20.5,\n    unit: \"°C\",\n    icon:\"male\", \n    color:\"#000\"};\nreturn msg;",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 410,
    "y": 240,
    "wires": [["6e190fde88e02b73", "cec6d16bd1e2af58", "481bc5433c59c3fe"]]
  },
  {
    "id": "e670863344d42f08",
    "type": "ui_button",
    "z": "1f6f1fdfddc5dc11",
    "name": "",
    "group": "7eb488fc4545d3f6",
    "order": 3,
    "width": 0,
    "height": 0,
    "passthru": false,
    "label": "Move Client",
    "tooltip": "",
    "color": "",
    "bgcolor": "",
    "className": "",
    "icon": "fa-male",
    "payload": "",
    "payloadType": "str",
    "topic": "",
    "topicType": "str",
    "x": 190,
    "y": 260,
    "wires": [["b8f2d41af7bf6818"]]
  },
  {
    "id": "5585f1c36b11838f",
    "type": "mqtt in",
    "z": "1f6f1fdfddc5dc11",
    "g": "54e3ebcd22faf107",
    "name": "",
    "topic": "uca/iot/piscine",
    "qos": "0",
    "datatype": "utf8",
    "broker": "98d215d2512f5617",
    "nl": false,
    "rap": true,
    "rh": 0,
    "inputs": 0,
    "x": 190,
    "y": 620,
    "wires": [["eb2979143969bbd6", "bb1ba11f7609f69f"]]
  },
  {
    "id": "696ea75c31f93bd5",
    "type": "debug",
    "z": "1f6f1fdfddc5dc11",
    "g": "54e3ebcd22faf107",
    "name": "debug 1",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 780,
    "y": 660,
    "wires": []
  },
  {
    "id": "eb2979143969bbd6",
    "type": "json",
    "z": "1f6f1fdfddc5dc11",
    "g": "54e3ebcd22faf107",
    "name": "",
    "property": "payload",
    "action": "",
    "pretty": false,
    "x": 390,
    "y": 660,
    "wires": [["529bc0c3a4faab33"]]
  },
  {
    "id": "6e190fde88e02b73",
    "type": "worldmap-tracks",
    "z": "1f6f1fdfddc5dc11",
    "name": "",
    "depth": "6",
    "layer": "combined",
    "smooth": false,
    "x": 650,
    "y": 220,
    "wires": [["cec6d16bd1e2af58"]]
  },
  {
    "id": "cec6d16bd1e2af58",
    "type": "ui_worldmap",
    "z": "1f6f1fdfddc5dc11",
    "group": "7eb488fc4545d3f6",
    "order": 2,
    "width": "0",
    "height": "0",
    "name": "",
    "lat": "43.61999752",
    "lon": "7.0499998",
    "zoom": "11",
    "layer": "OSMC",
    "cluster": "",
    "maxage": "",
    "usermenu": "show",
    "layers": "show",
    "panit": "false",
    "panlock": "false",
    "zoomlock": "false",
    "hiderightclick": "false",
    "coords": "deg",
    "showgrid": "true",
    "allowFileDrop": "false",
    "path": "/worldmap",
    "overlist": "DR,CO,RA,DN,TL,HM",
    "maplist": "OSMG,OSMC,EsriC,EsriS,EsriT,EsriO,EsriDG,NatGeo,UKOS,OpTop",
    "mapname": "",
    "mapurl": "",
    "mapopt": "",
    "mapwms": false,
    "x": 1220,
    "y": 380,
    "wires": []
  },
  {
    "id": "f8d0aec8cc27050c",
    "type": "ui_button",
    "z": "1f6f1fdfddc5dc11",
    "g": "8790d48f6e3c0f47",
    "name": "",
    "group": "7eb488fc4545d3f6",
    "order": 4,
    "width": 0,
    "height": 0,
    "passthru": false,
    "label": "Reset",
    "tooltip": "",
    "color": "",
    "bgcolor": "",
    "className": "",
    "icon": "",
    "payload": "",
    "payloadType": "str",
    "topic": "",
    "topicType": "str",
    "x": 170,
    "y": 340,
    "wires": [["b5bf64b41ee9ea69"]]
  },
  {
    "id": "b5bf64b41ee9ea69",
    "type": "function",
    "z": "1f6f1fdfddc5dc11",
    "g": "8790d48f6e3c0f47",
    "name": "Reset Layer",
    "func": "// clear the \"by default\" layer \nmsg.payload = {\"command\": { \"clear\": \"swimming pools\" } };\nflow.set(\"clientid\", null);\nreturn msg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 410,
    "y": 340,
    "wires": [["cec6d16bd1e2af58"]]
  },
  {
    "id": "529bc0c3a4faab33",
    "type": "function",
    "z": "1f6f1fdfddc5dc11",
    "g": "54e3ebcd22faf107",
    "name": "json adapt",
    "func": "//http://stevesnoderedguide.com/node-red-functions\n\nvar nmsg = { // nouveau message \n  topic: msg.topic // on garde l'ancien topic \n};\n\nvar busy;\nif (msg.payload.piscine.oocuped === false)\n  busy = \"battery-empty\";\nelse\n  busy = \"battery-full\";\n\nvar hsc;\nif (msg.payload.piscine.hotspot === false)\n  hsc = \"Blue\";\nelse\n  hsc = \"Red\";\n\nvar wl_label = \"Lien de demande d'ouverture de \" + msg.payload.info.ident \n                + \" par \" + flow.get('clientid') + \" : Cliquez moi !\"\nnmsg.payload = { // on modifie/adapte la payload\n  layer: \"swimming pools\",\n  name: msg.payload.info.ident,\n  description: msg.payload.info.user,\n  weblink: {\n    \"name\": wl_label, \"url\": \"http://waterbnbf-master-production.up.railway.app/open?idu=\" + flow.get('clientid') + \"&idswp=\" + msg.payload.info.ident\n},\n  radius:100,\n  unit: \"C\",\n  color: \"#000\",\n  value: msg.payload.status.temperature,\n  lat: msg.payload.location.gps.lat,\n  lon: msg.payload.location.gps.lon,\n  iconColor: hsc,\n  icon: busy\n}\n\nreturn nmsg;",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 590,
    "y": 660,
    "wires": [["cec6d16bd1e2af58", "696ea75c31f93bd5"]]
  },
  {
    "id": "79af489d737caf34",
    "type": "http in",
    "z": "1f6f1fdfddc5dc11",
    "g": "09f609abe92eadcf",
    "name": "Open",
    "url": "/open",
    "method": "get",
    "upload": false,
    "swaggerDoc": "",
    "x": 170,
    "y": 980,
    "wires": [["a9c6d8aaa69be1b2", "dae54a501e30d888"]]
  },
  {
    "id": "a9c6d8aaa69be1b2",
    "type": "debug",
    "z": "1f6f1fdfddc5dc11",
    "g": "09f609abe92eadcf",
    "name": "Open debug",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 510,
    "y": 960,
    "wires": []
  },
  {
    "id": "dae54a501e30d888",
    "type": "http response",
    "z": "1f6f1fdfddc5dc11",
    "g": "09f609abe92eadcf",
    "name": "",
    "statusCode": "200",
    "headers": {},
    "x": 520,
    "y": 1040,
    "wires": []
  },
  {
    "id": "8ccfce35838d8c63",
    "type": "ui_form",
    "z": "1f6f1fdfddc5dc11",
    "g": "e5e1b9d89036fe8f",
    "name": "WaterBnB Client Identification",
    "label": "WaterBnB Client Login (= numéro étudiant UCA)",
    "group": "7eb488fc4545d3f6",
    "order": 1,
    "width": 0,
    "height": 0,
    "options": [
      {
        "label": "Client ID",
        "value": "clientid",
        "type": "text",
        "required": true,
        "rows": null
      }
    ],
    "formValue": {
      "clientid": ""
    },
    "payload": "",
    "submit": "submit",
    "cancel": "cancel",
    "topic": "clientform",
    "topicType": "str",
    "splitLayout": false,
    "className": "",
    "x": 250,
    "y": 480,
    "wires": [["27dcf29ab60e4b40", "420af8e04016e992"]]
  },
  {
    "id": "481bc5433c59c3fe",
    "type": "debug",
    "z": "1f6f1fdfddc5dc11",
    "name": "debug 3",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "false",
    "statusVal": "",
    "statusType": "auto",
    "x": 660,
    "y": 160,
    "wires": []
  },
  {
    "id": "14868c269e8990cc",
    "type": "mqtt in",
    "z": "1f6f1fdfddc5dc11",
    "g": "ab2f79661cd63707",
    "name": "",
    "topic": "uca/waterbnb/GillesM/a50",
    "qos": "2",
    "datatype": "utf8",
    "broker": "f10dc6c57fe42592",
    "nl": false,
    "rap": true,
    "rh": 0,
    "inputs": 0,
    "x": 230,
    "y": 820,
    "wires": [["83bd0e73e2940c63"]]
  },
  {
    "id": "bc2b14cd49ca6fc5",
    "type": "debug",
    "z": "1f6f1fdfddc5dc11",
    "g": "ab2f79661cd63707",
    "name": "debug from owntracks MQTT topic",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 720,
    "y": 840,
    "wires": []
  },
  {
    "id": "83bd0e73e2940c63",
    "type": "json",
    "z": "1f6f1fdfddc5dc11",
    "g": "ab2f79661cd63707",
    "name": "",
    "property": "payload",
    "action": "",
    "pretty": false,
    "x": 450,
    "y": 820,
    "wires": [["bc2b14cd49ca6fc5", "5ade3da8a24690b2"]]
  },
  {
    "id": "5ade3da8a24690b2",
    "type": "function",
    "z": "1f6f1fdfddc5dc11",
    "g": "ab2f79661cd63707",
    "name": "json convert",
    "func": "// Convert json of owntracks to worldmap\nreturn {\n    payload: {\n        layer:\"waterbnb\",\n        name: msg.payload.tid,\n        lat: msg.payload.lat,\n        lon: msg.payload.lon,\n        icon: 'user-circle-o',\n        iconColor : \"Blue\"\n    }\n};",
    "outputs": 1,
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 690,
    "y": 780,
    "wires": [["cec6d16bd1e2af58"]]
  },
  {
    "id": "bb1ba11f7609f69f",
    "type": "debug",
    "z": "1f6f1fdfddc5dc11",
    "g": "54e3ebcd22faf107",
    "name": "debug  from swimming pools",
    "active": false,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 460,
    "y": 600,
    "wires": []
  },
  {
    "id": "7e84e1541fc64248",
    "type": "comment",
    "z": "1f6f1fdfddc5dc11",
    "name": "Formulaire d'identification du client",
    "info": "Grâce au formulaire, on positionne une variable globale au flow : l'ident du client qui utilise le service.",
    "x": 1240,
    "y": 480,
    "wires": []
  },
  {
    "id": "27dcf29ab60e4b40",
    "type": "function",
    "z": "1f6f1fdfddc5dc11",
    "g": "e5e1b9d89036fe8f",
    "name": "Callback du formulaire d'identification",
    "func": "// Ce node permet de stocker l'identificateur du \n// client dans le flow (un peu comme une variable \n// globale)\n\n\n//https://stevesnoderedguide.com/node-red-variables\n//https://techexplorations.com/guides/esp32/node-red-esp32-project/node-red-messages-variables/\n\nif (msg.topic === \"clientform\"){\n  flow.set(\"clientid\", msg.payload.clientid);\n  }\nreturn msg;\n",
    "outputs": 1,
    "timeout": "",
    "noerr": 0,
    "initialize": "",
    "finalize": "",
    "libs": [],
    "x": 690,
    "y": 440,
    "wires": [[]]
  },
  {
    "id": "3c620a2fc8db9d32",
    "type": "comment",
    "z": "1f6f1fdfddc5dc11",
    "name": "Fichier WaterBnB.json => Dashboard \"donné\" à un client du service WaterBnB",
    "info": "Lorsqu'un client va vouloir accéder à une piscine, il va devoir utiliser cette interface graphique.\n",
    "x": 350,
    "y": 60,
    "wires": []
  },
  {
    "id": "36a10647f9aa7291",
    "type": "comment",
    "z": "1f6f1fdfddc5dc11",
    "name": "Reset display",
    "info": "",
    "x": 650,
    "y": 320,
    "wires": []
  },
  {
    "id": "3928724936ed4afa",
    "type": "comment",
    "z": "1f6f1fdfddc5dc11",
    "name": "Affichage avec hyperlien d'ouverture des piscines ",
    "info": "",
    "x": 1280,
    "y": 620,
    "wires": []
  },
  {
    "id": "0fa70305356677dd",
    "type": "comment",
    "z": "1f6f1fdfddc5dc11",
    "name": "Pour tester la réception de la demande d'ouverture",
    "info": "",
    "x": 870,
    "y": 1000,
    "wires": []
  },
  {
    "id": "f8d46925a3d1dce0",
    "type": "comment",
    "z": "1f6f1fdfddc5dc11",
    "name": "Affichage de la géolocalisation du client de WaterBnB",
    "info": "",
    "x": 1160,
    "y": 800,
    "wires": []
  },
  {
    "id": "1a5164696da9d89e",
    "type": "comment",
    "z": "1f6f1fdfddc5dc11",
    "name": "trois choses à paramétrer => le topic de owntracks, le lien de demande d'ouverture et l'ID du client via le formulaire",
    "info": "Lorsqu'un client va vouloir accéder à une piscine, il va devoir utiliser cette interface graphique.\n",
    "x": 470,
    "y": 100,
    "wires": []
  },
  {
    "id": "420af8e04016e992",
    "type": "debug",
    "z": "1f6f1fdfddc5dc11",
    "g": "e5e1b9d89036fe8f",
    "name": "debug 2",
    "active": true,
    "tosidebar": true,
    "console": false,
    "tostatus": false,
    "complete": "payload",
    "targetType": "msg",
    "statusVal": "",
    "statusType": "auto",
    "x": 600,
    "y": 500,
    "wires": []
  }
]
